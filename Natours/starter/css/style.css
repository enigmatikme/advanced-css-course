
/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* reset using universal selector, it will select each and every element and
apply these selectors to it */
* {
  margin: 0;
  padding: 0;
  /* elements have default margin and padding, we want to start clean */
  box-sizing: border-box;
  /* doesnt add specified widht and height on to element */
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  /* 1.7 times bigger than the predefined line-height */
  color: #777;

  padding: 30px;
}

.header {
  height: 95vh;
  /* 95% of viewport height */
  position: relative;
  /* for the logobox absolute positioning where top and let start to count from*/
  background-image: linear-gradient(
    to right bottom,
    rgba(126, 213, 111, 0.801),
    #28b485), 
    url(../img/hero.jpg);
  background-size: cover;
  /* makes sure that it stretches out while maintaing its aspect ratio */
  background-position: top;
  /* as image size changes (resizing browser) image will remain attached on top */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
  /* width will be figured out by the broswer, can also do opposite */
}

/* animate parent div on hover, targeting logo alone does not work, makes it blink */
/* .logo-box:hover .logo{
  animation: moveInRight 5s ease-out;
} */

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /* relative to parent div with absolute */
  transform: translate(-50%, -50%);
  /* shift half of the width and top of elements height relative to element*/
  text-align: center;
  /* aligns text for button and all other elements, using absolute positioning
  would be overkill*/
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  backface-visibility: hidden;
  /* gets rid of the slight div shake for keyframes animation, hides what is
  behind the animated div. no one knows why it happens */
  margin-bottom: 60px;
}

.heading-primary-main {
  display: block;
  /* by default it is inline, block elements occupy entire widths that they have
  available and create line breaks after and before them */
  font-weight: 400;
  font-size: 60px;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;

  /* animation-delay: 3s;
  animation-iteration-count: 3; */
  
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;

  /* instead of writing line 82-84 you can use animation prop to define vals */
  animation: moveInRight 1s ease-out;
}

/* a more advanced animation property than trasition bc it gives you more
control over the steps of animation */
@keyframes moveInLeft {
  /* for browser performance its best to only animate 2 things, here it is
  opacity and transform proprety */
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  /* for browser performance its best to only animate 2 things, here it is
  opacity and transform proprety */
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/*link is the link psuedoclass. pseudoclasses: are a special state of the
selector, it is the state of the btn selector. includes select last child,
hover, clicked. to style elements under special conditions */
.btn:link, 
.btn:visited {
/* link is a special state of a seletor when it is an anchor element */
/* visited is when the user has clicked on the link before and visiting again */
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  /* default is inline element bc its text, so inline block prop treats it like
  its another block. shoudl always do this when you want to add heights weight
  to element*/
  display: inline-block;
}

.btn:hover {
  transform: translateY(-3px);
}

.btn:active {
  transform: translateY(-1px);
}

.btn-white {
  background-color: #fff;
  color: #777
}