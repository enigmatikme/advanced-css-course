// has to do with typography so split from base.scss
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  /* 1.7 times bigger than the predefined line-height */
  color: $color-grey;
  padding: 3rem;
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;

  backface-visibility: hidden;
  /* gets rid of the slight div shake for keyframes animation, hides what is
  behind the animated div. no one knows why it happens */
  margin-bottom: 6rem;

  &--main {
    display: block;
    /* by default it is inline, block elements occupy entire widths that they have
    available and create line breaks after and before them */
    font-weight: 400;
    font-size: 6rem;
    letter-spacing: 3.5rem;
  
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
  
    /* animation-delay: 3s;
    animation-iteration-count: 3; */
    
  }
  
  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem;
  
    /* instead of writing line 82-84 you can use animation prop to define vals */
    animation: moveInRight 1s ease-out;
  }
}

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  //* takes up necessary width of text, not 100% width
  background-image: linear-gradient(to right, $color-primary-light, $color-primary-dark);
  background-clip: text;
  -webkit-background-clip: text;
  // background gets clipped exactly where the text is
  //! both props added for compatibility issue ^
  // -webkit-text-fill-color: transparent;
  color: transparent;
  letter-spacing: .2rem;
  // bc of rounding issues such a small px doesn't have to be rem (2px)
  transition: all .2s;
  // all - all props that can undergo transition will do so

  &:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    //110%
    text-shadow: .5rem 1rem 2rem rgba($color-black, .2);
    //two directions. 5px is x direct 10 rem in y 2px blur, (color, opacity)
  }
}